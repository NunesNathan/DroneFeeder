---
openapi: 3.0.3
info:
  title: Drone Feeder
  version: 1.0.0-SNAPSHOT
paths:
  /drone:
    post:
      tags:
        - Drone
      description: Create a delivery
      operationId: addDrone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DroneDto'
      responses:
        '201':
          description: Create a drone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drone'
    get:
      tags:
        - Drone
      description: Returns all registered drones
      operationId: getDrones
      responses:
        '200':
          description: Get all the drones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Drone'
  '/drone/{droneId}':
    get:
      tags:
        - Drone
      description: Returns drone by id
      operationId: getDrone
      parameters:
        - name: droneId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Get drone by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drone'
  '/drone/{droneIdToUpdate}':
    put:
      tags:
        - Drone
      description: Update drone by id
      operationId: updateDrone
      parameters:
        - name: droneIdToUpdate
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DroneDto'
      responses:
        '200':
          description: Updated drone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drone'
  '/drone/{droneIdToDelete}':
    delete:
      tags:
        - Drone
      description: Delete drone by id
      operationId: deleteDrone
      parameters:
        - name: droneIdToDelete
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Drone with provided id
  '/drone/deliveries/{droneId}':
    get:
      tags:
        - Drone
      description: Returns drone deliveries by id
      operationId: getDroneDeliveries
      parameters:
        - name: droneId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Get drone deliveries by id
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Delivery'
  /delivery:
    post:
      tags:
        - Delivery
      description: Create a delivery
      operationId: addDelivery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryDto'
      responses:
        '201':
          description: Create a delivery
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
    get:
      tags:
        - Delivery
      description: Returns all registered deliveries
      operationId: getDeliveries
      responses:
        '200':
          description: Get all the deliveries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Delivery'
  '/delivery/{deliveryId}':
    get:
      tags:
        - Delivery
      description: Returns delivery by id
      operationId: getDelivery
      parameters:
        - name: deliveryId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Get delivery by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
  '/delivery/{deliveryIdToUpdate}':
    put:
      tags:
        - Delivery
      description: Update delivery status by id
      operationId: updateDeliveryStatus
      parameters:
        - name: deliveryIdToUpdate
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeliveryStatusDto'
      responses:
        '200':
          description: Updated delivery
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
  '/delivery/{deliveryIdToDelete}':
    delete:
      tags:
        - Delivery
      description: Delete delivery by id
      operationId: deleteDelivery
      parameters:
        - name: deliveryIdToDelete
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Delivery with provided id
  '/delivery/drone/{deliveryId}':
    get:
      tags:
        - Delivery
      description: Returns delivery drones by delivery id
      operationId: getDeliveryDrone
      parameters:
        - name: deliveryId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Get delivery drone by delivery id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drone'
  '/delivery/links':
    get:
      tags:
        - Links
      description: Returns all deliveries links
      operationId: getAllLinks
      responses:
        '200':
          description: Get all deliveries links
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeliveryVideo'
components:
  schemas:
    Drone:
      type: object
      properties:
        id:
          format: int32
          type: integer
        model:
          type: string
        lastComponentsReview:
          format: date
          type: string
        latitude:
          type: number
        longitude:
          type: number
        deliveries:
          type: array
          items:
            $ref: '#/components/schemas/Delivery'
      description: ok
    DroneDto:
      type: object
      properties:
        model:
          type: string
        latitude:
          type: number
        longitude:
          type: number
      description: ok
    Delivery:
      type: object
      properties:
        id:
          format: int32
          type: integer
        deliveryType:
          type: string
        deliveryStatus:
          type: string
        createOrder:
          format: date
          type: string
        lastUpdate:
          format: date
          type: string
        deliveredConfirmationLink:
          type: string
        drone:
          $ref: '#/components/schemas/Drone'
      description: ok
    DeliveryDto:
      type: object
      properties:
        deliveryType:
          type: string
    DeliveryVideo:
      type: object
      properties:
        id:
          format: int32
          type: integer
        delivery:
          format: int32
          type: integer
        confirmationLink:
          type: string
      description: ok
    UpdateDeliveryStatusDto:
      type: object
      properties:
        deliveredConfirmationLink:
          required: false
          type: string
        deliveryStatus:
          type: string
      description: ok
